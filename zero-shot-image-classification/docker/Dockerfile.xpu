FROM intel/deep-learning-essentials:2025.1.3-0-devel-ubuntu24.04 AS base
SHELL ["/bin/bash", "-c"]

ARG PYTHON_VER=3.12
ENV TORCH_DEVICE_BACKEND_AUTOLOAD=0
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install -y software-properties-common && \
    add-apt-repository -y ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get install -y python$PYTHON_VER python$PYTHON_VER-dev python3-pip && \
    ln -sf /usr/bin/python$PYTHON_VER /usr/bin/python3 && \
    ln -sf /usr/bin/python3 /usr/bin/python && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update && \
    apt-get -y install \
        apt-utils \
        build-essential \
        ca-certificates \
        curl \
        git \
        git-lfs \
        vim \
        numactl \
        gnupg2 \
        gpg-agent \
        zlib1g-dev \
        rsync \
        sudo \
        libnl-genl-3-200 \
        unzip \
        ffmpeg \
        tesseract-ocr \
        espeak-ng \
        wget \
        ncurses-term && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

#RUN apt-get update && \
#    apt-get install -y \
#        xpu-smi intel-ocloc clinfo && \
#    apt-get clean && \
#    rm -rf  /var/lib/apt/lists/*

RUN apt-get update && \
    apt-get install -y \
        linux-headers-$(uname -r) linux-modules-extra-$(uname -r) \
        flex bison \
        intel-fw-gpu intel-i915-dkms xpu-smi intel-ocloc clinfo\
        intel-opencl-icd libze-intel-gpu1 libze1 \
        intel-media-va-driver-non-free libmfx-gen1 libvpl2 \
        libegl-mesa0 libegl1 libegl1-mesa-dev libgbm1 libgl1-mesa-dev libgl1-mesa-dri \
        libglapi-mesa libglx-mesa0 libigdgmm12 libxatracker2 mesa-va-drivers \
        mesa-vdpau-drivers mesa-vulkan-drivers va-driver-all vainfo hwinfo \
        libigc-dev intel-igc-cm libigdfcl-dev libigfxcmrt-dev libze-dev && \
    apt-get clean && \
    rm -rf  /var/lib/apt/lists/*

RUN pip install --break-system-packages triton==3.4.0

RUN pip install --break-system-packages torch==2.8.0+xpu torchvision==0.23.0+xpu torchaudio==2.8.0+xpu --index-url https://download.pytorch.org/whl/xpu --no-cache-dir
# RUN pip install intel-extension-for-pytorch==2.7.10+xpu oneccl_bind_pt==2.7.0+xpu --extra-index-url https://pytorch-extension.intel.com/release-whl/stable/xpu/us/ --no-cache-dir

RUN pip install --break-system-packages torchcodec torchdata

RUN pip install --break-system-packages evaluate pyctcdecode pytesseract decord galore-torch fire scipy scikit-learn sentencepiece sacremoses nltk rouge_score librosa soundfile g2p_en mpi4py requests_mock
RUN pip install --break-system-packages pretty_midi essentia resampy Levenshtein av sacrebleu phonemizer invisible_watermark schedulefree
RUN pip install --break-system-packages gguf hqq compressed_tensors gptqmodel autoawq deepspeed torchao onnx auto_round
RUN pip install --break-system-packages hf_transfer huggingface-hub hf-doc-builder datasets optimum-quanto timm transformers accelerate optimum peft diffusers trl kernels

# install liger-kernel
RUN pip install --break-system-packages git+https://github.com/linkedin/Liger-Kernel.git --extra-index-url https://download.pytorch.org/whl/xpu

# install mergekit
RUN pip install --break-system-packages git+https://github.com/arcee-ai/mergekit.git@v0.1.3

# install bitsandbytes
RUN pip install --break-system-packages git+https://github.com/bitsandbytes-foundation/bitsandbytes.git

ENV OCL_ICD_VENDORS=/etc/OpenCL/vendors
ENV FI_PROVIDER_PATH=${I_MPI_ROOT}/lib/libfabric/prov:/usr/lib/x86_64-linux-gnu/libfabric
ENV CCL_ROOT=/usr/local
ENV CCL_ATL_TRANSPORT=ofi
ENV I_MPI_ROOT=/usr/local
ENV CLASSPATH=${I_MPI_ROOT}/lib/mpi.jar
ENV PATH=${I_MPI_ROOT}/bin/libfabric:${PATH}
ENV LD_LIBRARY_PATH=${I_MPI_ROOT}/lib/libfabric:${LD_LIBRARY_PATH}

RUN touch /entrypoint.sh
RUN chmod +x /entrypoint.sh
RUN echo "#!/bin/bash" >> /entrypoint.sh
RUN echo "source /opt/intel/oneapi/setvars.sh --force && /bin/bash" >> /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]


FROM base AS ut

RUN pip install pytest-env pytest-timeout pytest-rerunfailures openpyxl clearml
RUN pip install git+https://github.com/ssrikanta/pytest-excel.git
RUN git clone https://github.com/vllm-project/vllm.git && cd vllm && pip install -v -r requirements/xpu.txt && VLLM_TARGET_DEVICE=xpu pip install .
WORKDIR /.tests
ARG QUANTO_COMMIT=157f419c2c5c72fe5dadd302255380c0644e5e78
ARG TRANSFORMERS_COMMIT=6e3063422c4b1c014aa60c32b9254fd2902f0f28
ARG ACCELERATE_COMMIT=16bf1d89016e03f5b0d8545e9883df7fe9ab9b5f
ARG PEFT_COMMIT=62c9cf30319ca219e1d6754626c17f510fc76441
ARG DIFFUSERS_COMMIT=f161e277d0ec534afa4dfc461bc5baacffd7278b
ARG TRL_COMMIT=3ef9faf2574e9ead0edad668de8d41d228a088c9
RUN pip install git+https://github.com/muellerzr/import-timer.git
RUN pip install --ignore-installed --force-reinstall blinker
RUN git clone https://github.com/huggingface/optimum-quanto.git && cd optimum-quanto && git checkout $QUANTO_COMMIT && pip install .[dev]
RUN git clone https://github.com/huggingface/transformers && cd transformers && git checkout $TRANSFORMERS_COMMIT && pip install .[deepspeed-testing]
RUN git clone https://github.com/huggingface/accelerate.git && cd accelerate && git checkout $ACCELERATE_COMMIT && pip install .[testing,test_trackers]
RUN git clone https://github.com/huggingface/peft.git && cd peft && git checkout $PEFT_COMMIT && pip install .[test]
RUN git clone https://github.com/huggingface/diffusers.git && cd diffusers && git checkout $DIFFUSERS_COMMIT && pip install .[test]
RUN git clone https://github.com/huggingface/trl.git && cd trl && git checkout $TRL_COMMIT && pip install .[test]
# TODO: this is a WA to the JIRA https://jira.devtools.intel.com/browse/HUGGINGFAD-281, but it conflicts w/ datasets dependency as in huggingface/datasets#7537, need fix in the future
RUN pip install --upgrade dill
